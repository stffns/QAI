{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "üöÄ Start QA Agent (Chat)",
            "type": "shell",
            "command": "python",
            "args": [
                "run_qa_agent.py"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "showReuseMessage": false
            },
            "runOptions": {
                "instanceLimit": 1
            },
            "problemMatcher": [],
            "detail": "Start the QA Intelligence Agent in chat mode"
        },
        {
            "label": "üåê Start WebSocket Server",
            "type": "shell",
            "command": "python",
            "args": [
                "run_websocket_server.py"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new",
                "showReuseMessage": false
            },
            "isBackground": true,
            "runOptions": {
                "instanceLimit": 1
            },
            "problemMatcher": [],
            "detail": "Start the WebSocket Server for real-time communication"
        },
        {
            "label": "üë• Start QA Teams Demo",
            "type": "shell",
            "command": "make",
            "args": [
                "run-teams"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "showReuseMessage": false
            },
            "runOptions": {
                "instanceLimit": 1
            },
            "problemMatcher": [],
            "detail": "Start the QA Teams collaboration demo"
        },
        {
            "label": "üß™ Run Tests",
            "type": "shell",
            "command": "make",
            "args": [
                "test"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false
            },
            "problemMatcher": [
                "$python"
            ],
            "detail": "Run all tests with coverage report"
        },
        {
            "label": "‚ö° Run Tests (Fast)",
            "type": "shell",
            "command": "make",
            "args": [
                "test-fast"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false
            },
            "problemMatcher": [
                "$python"
            ],
            "detail": "Run tests without coverage for faster execution"
        },
        {
            "label": "üîç Quality Check (All)",
            "type": "shell",
            "command": "make",
            "args": [
                "qa-check"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false
            },
            "problemMatcher": [
                "$python"
            ],
            "detail": "Run comprehensive quality checks (lint, type, security)"
        },
        {
            "label": "üé® Format Code",
            "type": "shell",
            "command": "make",
            "args": [
                "format"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false
            },
            "problemMatcher": [],
            "detail": "Format code with Black and isort"
        },
        {
            "label": "üîí Security Check",
            "type": "shell",
            "command": "make",
            "args": [
                "security"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false
            },
            "problemMatcher": [
                "$python"
            ],
            "detail": "Run security analysis with Bandit"
        },
        {
            "label": "üìä Type Check",
            "type": "shell",
            "command": "make",
            "args": [
                "type-check"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false
            },
            "problemMatcher": [
                "$python"
            ],
            "detail": "Run type checking with MyPy"
        },
        {
            "label": "üßπ Clean Build Artifacts",
            "type": "shell",
            "command": "make",
            "args": [
                "clean"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false
            },
            "problemMatcher": [],
            "detail": "Clean all build artifacts and cache files"
        },
        {
            "label": "üîß Install Dependencies",
            "type": "shell",
            "command": "make",
            "args": [
                "install"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false
            },
            "problemMatcher": [],
            "detail": "Install production dependencies"
        },
        {
            "label": "üõ†Ô∏è Install Dev Dependencies",
            "type": "shell",
            "command": "make",
            "args": [
                "install-dev"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false
            },
            "problemMatcher": [],
            "detail": "Install development dependencies and setup pre-commit hooks"
        },
        {
            "label": "üìö Build Documentation",
            "type": "shell",
            "command": "make",
            "args": [
                "docs"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false
            },
            "problemMatcher": [],
            "detail": "Build project documentation"
        },
        {
            "label": "üîÑ Database Migration",
            "type": "shell",
            "command": "python",
            "args": [
                "database/migrations/add_solid_fields.py"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false
            },
            "problemMatcher": [
                "$python"
            ],
            "detail": "Run database migrations"
        },
        {
            "label": "üèóÔ∏è Full Setup (Development)",
            "type": "shell",
            "command": "make",
            "args": [
                "install-dev"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false
            },
            "dependsOrder": "sequence",
            "dependsOn": [
                "üßπ Clean Build Artifacts"
            ],
            "problemMatcher": [],
            "detail": "Complete development setup: clean, install dependencies, setup hooks"
        },
        {
            "label": "üöÄ Quick Start: Agent + WebSocket",
            "type": "shell",
            "command": "echo",
            "args": [
                "Starting QA Agent and WebSocket Server..."
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false
            },
            "dependsOrder": "parallel",
            "dependsOn": [
                "üåê Start WebSocket Server",
                "üöÄ Start QA Agent (Chat)"
            ],
            "problemMatcher": [],
            "detail": "Start both QA Agent and WebSocket Server simultaneously"
        }
    ]
}